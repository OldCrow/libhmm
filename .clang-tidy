---
# clang-tidy configuration for libhmm C++17 project
# This configuration enforces the libhmm style guide and catches common issues

Checks: >-
  -*,
  bugprone-*,
  cert-dcl21-cpp,
  cert-dcl58-cpp,
  cert-env33-c,
  cert-err34-c,
  cert-err52-cpp,
  cert-err58-cpp,
  cert-err60-cpp,
  cert-flp30-c,
  cert-msc50-cpp,
  cert-msc51-cpp,
  cert-oop57-cpp,
  cert-oop58-cpp,
  clang-analyzer-*,
  cppcoreguidelines-avoid-goto,
  cppcoreguidelines-avoid-non-const-global-variables,
  cppcoreguidelines-init-variables,
  cppcoreguidelines-interfaces-global-init,
  cppcoreguidelines-narrowing-conversions,
  cppcoreguidelines-no-malloc,
  cppcoreguidelines-owning-memory,
  cppcoreguidelines-prefer-member-initializer,
  cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  cppcoreguidelines-pro-bounds-constant-array-index,
  cppcoreguidelines-pro-bounds-pointer-arithmetic,
  cppcoreguidelines-pro-type-const-cast,
  cppcoreguidelines-pro-type-cstyle-cast,
  cppcoreguidelines-pro-type-member-init,
  cppcoreguidelines-pro-type-static-cast-downcast,
  cppcoreguidelines-slicing,
  cppcoreguidelines-special-member-functions,
  google-build-explicit-make-pair,
  google-build-namespaces,
  google-default-arguments,
  google-explicit-constructor,
  google-global-names-in-headers,
  google-readability-avoid-underscore-in-googletest-name,
  google-readability-casting,
  google-readability-todo,
  google-runtime-operator,
  hicpp-exception-baseclass,
  hicpp-multiway-paths-covered,
  misc-definitions-in-headers,
  misc-misplaced-const,
  misc-new-delete-overloads,
  misc-no-recursion,
  misc-non-copyable-objects,
  misc-throw-by-value-catch-by-reference,
  misc-unconventional-assign-operator,
  misc-uniqueptr-reset-release,
  modernize-avoid-bind,
  modernize-avoid-c-arrays,
  modernize-concat-nested-namespaces,
  modernize-deprecated-headers,
  modernize-deprecated-ios-base-aliases,
  modernize-loop-convert,
  modernize-make-shared,
  modernize-make-unique,
  modernize-pass-by-value,
  modernize-raw-string-literal,
  modernize-redundant-void-arg,
  modernize-replace-auto-ptr,
  modernize-replace-disallow-copy-and-assign-macro,
  modernize-replace-random-shuffle,
  modernize-return-braced-init-list,
  modernize-shrink-to-fit,
  modernize-unary-static-assert,
  modernize-use-auto,
  modernize-use-bool-literals,
  modernize-use-default-member-init,
  modernize-use-emplace,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-nodiscard,
  modernize-use-noexcept,
  modernize-use-nullptr,
  modernize-use-override,
  modernize-use-transparent-functors,
  modernize-use-uncaught-exceptions,
  performance-*,
  portability-*,
  readability-avoid-const-params-in-decls,
  readability-const-return-type,
  readability-container-size-empty,
  readability-convert-member-functions-to-static,
  readability-delete-null-pointer,
  readability-deleted-default,
  readability-inconsistent-declaration-parameter-name,
  readability-make-member-function-const,
  readability-misleading-indentation,
  readability-misplaced-array-index,
  readability-non-const-parameter,
  readability-redundant-control-flow,
  readability-redundant-declaration,
  readability-redundant-function-ptr-dereference,
  readability-redundant-smartptr-get,
  readability-redundant-string-cstr,
  readability-redundant-string-init,
  readability-simplify-subscript-expr,
  readability-static-accessed-through-instance,
  readability-static-definition-in-anonymous-namespace,
  readability-string-compare,
  readability-uniqueptr-delete-release,
  readability-use-anyofallof,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  -cert-dcl37-c,
  -cert-dcl51-cpp,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -google-build-using-namespace,
  -google-readability-braces-around-statements,
  -google-readability-function-size,
  -google-readability-namespace-comments,
  -misc-non-private-member-variables-in-classes,
  -modernize-use-trailing-return-type,
  -performance-avoid-endl,
  -readability-braces-around-statements,
  -readability-function-cognitive-complexity,
  -readability-function-size,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-named-parameter,
  -readability-uppercase-literal-suffix

# Treat warnings as errors to enforce code quality
# WarningsAsErrors: '*'  # Temporarily disabled for assessment

# Only apply checks to our project files, not system headers
HeaderFilterRegex: '^.*/include/libhmm/.*\.h$'

# Check Options for specific rules
CheckOptions:
  # Naming conventions to match libhmm style guide
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassPrefix
    value: ''
  - key: readability-identifier-naming.ClassSuffix
    value: ''
  - key: readability-identifier-naming.FunctionCase
    value: camelBack
  - key: readability-identifier-naming.FunctionPrefix
    value: ''
  - key: readability-identifier-naming.FunctionSuffix
    value: ''
  - key: readability-identifier-naming.MethodCase
    value: camelBack
  - key: readability-identifier-naming.MethodPrefix
    value: ''
  - key: readability-identifier-naming.MethodSuffix
    value: ''
  - key: readability-identifier-naming.VariableCase
    value: camelBack
  - key: readability-identifier-naming.VariablePrefix
    value: ''
  - key: readability-identifier-naming.VariableSuffix
    value: ''
  - key: readability-identifier-naming.PrivateMemberCase
    value: camelBack
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: ''
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: '_'
  - key: readability-identifier-naming.ProtectedMemberCase
    value: camelBack
  - key: readability-identifier-naming.ProtectedMemberPrefix
    value: ''
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: '_'
  - key: readability-identifier-naming.PublicMemberCase
    value: camelBack
  - key: readability-identifier-naming.PublicMemberPrefix
    value: ''
  - key: readability-identifier-naming.PublicMemberSuffix
    value: ''
  - key: readability-identifier-naming.ParameterCase
    value: camelBack
  - key: readability-identifier-naming.ParameterPrefix
    value: ''
  - key: readability-identifier-naming.ParameterSuffix
    value: ''
  - key: readability-identifier-naming.ConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.ConstantPrefix
    value: ''
  - key: readability-identifier-naming.ConstantSuffix
    value: ''
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.EnumPrefix
    value: ''
  - key: readability-identifier-naming.EnumSuffix
    value: ''
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantPrefix
    value: ''
  - key: readability-identifier-naming.EnumConstantSuffix
    value: ''
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.NamespacePrefix
    value: ''
  - key: readability-identifier-naming.NamespaceSuffix
    value: ''
  
  # Performance and modernization options
  - key: modernize-use-auto.MinTypeNameLength
    value: '5'
  - key: modernize-use-auto.RemoveStars
    value: 'false'
  - key: performance-for-range-copy.WarnOnAllAutoCopies
    value: 'true'
  - key: performance-inefficient-string-concatenation.StrictMode
    value: 'true'
  - key: performance-unnecessary-value-param.IncludeStyle
    value: 'llvm'
    
  # Certificate and security options
  - key: cert-dcl16-c.NewSuffixes
    value: 'L;LL;LU;LLU'
  - key: cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
    value: 'false'
    
  # Core guidelines options
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: 'true'
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions
    value: 'false'
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted
    value: 'true'

# Use the project's .clang-format for formatting style
FormatStyle: file

# Exclude system and third-party headers from analysis
SystemHeaders: false
